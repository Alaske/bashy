#!/bin/bash

. boilerplate.inc || exit

fail() { printf '== fails %d:' "$1"; printf ' %q' "${@:2}"; printf '\n'; exit 1; }
ret() { "${@:2}"; local r=$?; [ $r = "$1" ] || fail $r "$@"; }
no() { ( "$@"; :; ) 2>/dev/null && fail $? "$@"; }

cmp()
{
  "${@:3}"
  local -n v="$1"
  ret 0 test ".$v" = ".$2"
}

# Check truthy variable catching
cmp a '' ret 0 v a true
cmp a '' ret 0 v a x true
cmp a '' ret 0 v a o true

# Check failing variable catching
ret 23 no v a false
cmp a '' ret 1 v a x false
ret 23 no v a o false

# check for correct return value
cmp a '' ret 69 v a x exit 69

# Check that only one LF is eaten at the end of the output
cmp a $'\n' ret 0 v a echo $'\n'

